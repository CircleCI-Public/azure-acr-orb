version: 2.1

orbs:
  orb-tools: circleci/orb-tools@8.5.0
  azure-cli: circleci/azure-cli@1.1.0
  azure-acr: ttrahan/azure-acr@dev:alpha
  circle-compare-url: iynere/compare-url@0.4.5

executors:
  ci-base:
    resource_class: small
    docker:
      - image: cibuilds/base

  cli:
    resource_class: small
    docker:
      - image: circleci/circleci-cli

  lint-condo:
    resource_class: small
    docker:
      - image: singapore/lint-condo

jobs:
  lint:
    executor: lint-condo
    steps:
      - checkout
      - run: yamllint .

  # validate goes here: see workflow

  publish-dev:
    executor: cli
    steps:
      - checkout

      - attach_workspace:
          at: workspace

      - run:
          name: publish dev versions
          command: |
            # for integration testing
            circleci orb publish workspace/orb.yml cirleci/azure-acr@dev:alpha --token $CIRCLE_TOKEN

            # for transparency
            circleci orb publish workspace/orb.yml circleci/azure-acr@dev:$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

            # for potentially promoting to prod
            circleci orb publish workspace/orb.yml circleci/azure-acr@dev:${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

      - store_artifacts:
          path: workspace/orb.yml

  trigger-integration:
    executor: ci-base
    parameters:
      tag:
        type: enum
        default: "integration"
        enum: ["integration", master]
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "54:b8:9b:79:74:29:3e:dd:95:52:4d:4b:e6:8b:38:f2"

      - run:
          name: git config
          command: |
            git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
            git config --global user.name "$CIRCLE_USERNAME"

      - circle-compare-url/reconstruct

      - run:
          name: trigger integration workflow, possible patch / minor / major release
          command: |
            CIRCLE_COMPARE_URL=$(cat CIRCLE_COMPARE_URL.txt)

            COMMIT_RANGE=$(echo $CIRCLE_COMPARE_URL | sed 's:^.*/compare/::g')

            echo "Commit range: $COMMIT_RANGE"

            if [[ $(git diff $COMMIT_RANGE --name-status | grep -e "src/commands" -e "src/jobs") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-major-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            elif [[ $(git diff $COMMIT_RANGE --name-status | grep -e "src/examples" -e "src/@orb.yml") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-minor-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            elif [[ $(git diff $COMMIT_RANGE --name-status | grep -e "config.yml") ]]; then
              INTEGRATION_TAG=<<parameters.tag>>-patch-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            else
              INTEGRATION_TAG=<<parameters.tag>>-skip-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
            fi

            git tag $INTEGRATION_TAG
            git push origin $INTEGRATION_TAG

  dev-promote-prod:
    executor: cli
    parameters:
      release:
        type: enum
        default: "patch"
        enum: ["patch", "minor", "major"]
    steps:
      - run:
          name: major release if changes to commands/jobs, minor if to examples or @orb.yml, otherwise patch
          command: circleci orb publish promote circleci/azure-acr@dev:${CIRCLE_SHA1:0:7} <<parameters.release>> --token $CIRCLE_TOKEN

  pre-integration-checkout-workspace-job:
    executor: ci-base
    steps:
      - checkout

      - persist_to_workspace:
          root: .
          paths: Dockerfile

# yaml anchors
integration-dev_filters: &integration-dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

integration-master_filters: &integration-master_filters
  branches:
    ignore: /.*/
  tags:
    only: /master-.*/

integration-pre-steps: &integration-pre-steps
  [add_ssh_keys: {fingerprints: ["54:b8:9b:79:74:29:3e:dd:95:52:4d:4b:e6:8b:38:f2"]}, run: "rm -rf Dockerfile"]

integration-post-steps: &integration-post-steps
  [run: "az acr repository delete --repository azure-acr-orb-${CIRCLE_SHA1:0:7} --force", run: {when: "always", name: "cleanup tag", command: "git config --global user.email $CIRCLE_USERNAME@users.noreply.github.com && git config --global user.name $CIRCLE_USERNAME && git push --delete origin $CIRCLE_TAG"}]

workflows:
  lint-pack_validate_deploy-dev:
    jobs:
      - lint

      - orb-tools/pack:
          name: pack-validate
          workspace-path: orb.yml
          artifact-path: orb.yml
          requires:
            - lint

      - publish-dev:
          context: orb-publishing
          requires:
            - pack-validate

      - trigger-integration:
          name: trigger-integration-dev
          requires:
            - publish-dev
          filters:
            branches:
              ignore: master

      - trigger-integration:
          name: trigger-integration-master
          tag: master
          requires:
            - publish-dev
          filters:
            branches:
              only: master

  integration-tests_deploy-prod:
    jobs:
      # triggered by non-master branch commits
      - pre-integration-checkout-workspace-job:
          name: pre-integration-dev
          filters: *integration-dev_filters

      - azure-acr/build_and_push_image:
          name: integration-tests-dev
          context: orb-publishing
          pre-steps: *integration-pre-steps
          attach-workspace: true
          workspace-root: workspace
          profile-name: testing
          repo: azure-acr-orb-${CIRCLE_SHA1:0:7}
          create-repo: true
          tag: integration-dev
          dockerfile: workspace/Dockerfile
          path: workspace
          extra-build-args: --compress
          filters: *integration-dev_filters
          post-steps: *integration-post-steps
          requires:
            - pre-integration-dev

      # triggered by master branch commits
      - pre-integration-checkout-workspace-job:
          name: pre-integration-master
          filters: *integration-master_filters

      - azure-acr/build_and_push_image:
          name: integration-tests-master
          context: orb-publishing
          pre-steps: *integration-pre-steps
          attach-workspace: true
          workspace-root: workspace
          profile-name: testing
          repo: azure-acr-orb-${CIRCLE_SHA1:0:7}
          create-repo: true
          tag: integration-master
          dockerfile: workspace/Dockerfile
          path: workspace
          extra-build-args: --compress
          filters: *integration-master_filters
          post-steps: *integration-post-steps
          requires:
            - pre-integration-master

      # patch, minor, or major publishing
      - dev-promote-prod:
          name: dev-promote-patch
          context: orb-publishing
          requires:
            - integration-tests-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-patch.*/

      - dev-promote-prod:
          name: dev-promote-minor
          release: minor
          context: orb-publishing
          requires:
            - integration-tests-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-minor.*/

      - dev-promote-prod:
          name: dev-promote-major
          release: major
          context: orb-publishing
          requires:
            - integration-tests-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-major.*/
